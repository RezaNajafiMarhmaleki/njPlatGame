#include "StdAfx.h"
#include "Level.h"
#include "TextureManager.h"
#include "Game.h"
int level1_size = 42;
int  level1[][15] ={
		{00,00,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,-2,00,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,-3,00,00,00,00,00,00,02,00,00,03},
		{00,00,00,00,-4,00,00,00,00,00,-5,01,00,00,00},
		{00,00,00,00,00,00,00,00,00,00,00,01,00,00,00},
		{00,00,00,00,00,00,00,00,00,00,-5,01,00,00,02},
		{00,00,00,00,00,00,00,00,00,00,71,03,00,00,01},
		{00,00,00,00,00,00,00,72,00,00,00,00,00,02,01},
		{00,00,00,00,00,00,00,00,00,02,00,00,00,01,01},
		{00,00,00,00,00,00,00,00,00,01,00,00,00,01,03},
		{00,00,00,00,00,02,00,00,00,01,00,00,00,01,00},
		{00,00,00,00,99,01,00,00,00,03,00,00,70,03,00},
		{00,00,00,00,00,03,00,00,00,00,00,00,00,00,02},
		{00,00,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,-2,00,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,-3,00,00,00,00,00,00,02,00,00,03},
		{00,00,00,00,-4,00,00,00,00,00,-5,01,00,00,00},
		{00,00,00,00,00,00,00,00,00,00,00,01,00,00,00},
		{00,00,00,00,00,00,00,00,00,00,-5,01,00,00,02},
		{00,00,00,00,00,00,00,00,00,00,71,03,00,00,01},
		{00,00,00,00,00,00,00,00,00,00,00,00,00,02,01},
		{00,00,00,00,00,00,00,00,00,02,00,00,00,01,01},
		{00,00,00,00,00,00,00,00,00,01,00,00,00,01,03},
		{00,00,00,00,00,02,00,00,00,01,00,00,00,01,00},
		{00,00,00,00,99,01,00,00,00,03,00,00,70,03,02},
		{00,00,00,00,00,03,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,00,00,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,-2,00,00,00,00,00,00,00,00,00,01},
		{00,00,00,00,-3,00,00,00,00,00,00,02,00,00,03},
		{00,00,00,00,-4,00,00,00,00,00,-5,01,00,00,00},
		{00,00,00,00,00,00,00,00,00,00,00,01,00,00,00},
		{00,00,00,00,00,00,00,00,00,00,-5,01,00,00,02},
		{00,00,00,00,00,00,00,00,00,00,71,03,00,00,01},
		{00,00,00,00,00,00,00,00,00,00,00,00,00,02,01},
		{00,00,00,00,00,00,00,00,00,02,00,00,00,01,01},
		{00,00,00,00,00,00,00,00,00,01,00,00,00,01,03},
		{00,00,00,00,00,02,00,00,00,01,00,00,00,01,00},
		{00,00,00,00,71,01,00,00,00,03,00,00,70,03,00}
};

Level* Level::s_pInstance ( 0);


void Level::render(){
	int x= viewportx/32;
	int y= viewporty/32;

	int w= width/32;
	int h=height /32;

	for(int i=x;i<=(w+x);i++)
		for(int j=y;j<(h+y);j++){

			std::string m_textureID;

			switch(level1[i][j]){
			case 1:
				m_textureID="tile1";
				break;
			case 2:
				m_textureID="tile2";
				break;
			case 3:
				m_textureID="tile3";
				break;
			case -2:
				m_textureID="tile-2";
				break;
			case -3:
				m_textureID="tile-3";
				break;
			case -4:
				m_textureID="tile-4";
				break;
			case -5:
				m_textureID="tile-5";
				break;
			case 70:
				m_textureID="tile70";
				break;
			case 71:
				m_textureID="tile71";
				break;
			case 99:
				m_textureID="tile99";
				break;
			}
			TextureManager::Instance()->
				draw(m_textureID,(i)*32-viewportx,(j-y)*32,32, 32, Game::Instance()->getRenderer());

		}
}

int Level::getlevelBrick(int x,int y,bool byviewport){
	if( byviewport){
		x = x+viewportx/32;
		y = y+viewporty/32;
	}

	return level1[x][y];
}
void Level::setlevelBrick(Vector2D v1,int value){
	Vector2D v2(viewportx/32,viewporty/32);
	v1 +=   v2 ;
	 level1[(int)v1.getX()][(int)v1.getY()]=value;
}

bool Level::ViewPort_Inc(){
	int x= (viewportx+1)/32+(viewportx%32>0?1:0);
	int w= width/32;

	if(x+w<=level1_size){
		viewportx+=1;
		return true;
	}
		return false;
}
bool Level::ViewPort_Dec(){
		int x= (viewportx-32)/32;
	if(x>=0){
		viewportx-=32;
		return true;
	}
	return false;
}
